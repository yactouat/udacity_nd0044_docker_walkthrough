name: CI to DockerHub

on:

  push:
    # only specific versions are pushed, instead of every commit updating the latest version on Docker Hub
    # you can tag your repo with `git tag -a vx.x.x`
    tags: 
      - "v*.*.*"

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      # build cache reduces build time because it wont re download all images + it reduces the number of pulls against DockerHub
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: checkout repo
        uses: actions/checkout@v3
      - name: login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flask_todos_example_v2:${{ github.ref_name }}
          # implementing cache here
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}